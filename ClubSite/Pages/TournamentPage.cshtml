@page
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Mvc.TagHelpers
@inject IAuthorizationService Auth
@model ClubSite.Pages.TournamentPageModel
@{
    var definition = Model.Data.TournamentDefinition;
    var isTournamentOver = definition.IsOver(DateTime.Now);
    var hasImage = Model.Data.TournamentDefinition.TopImage.HasValue;
    var isAuthenticated = (await Auth.AuthorizeAsync(User, Piranha.Manager.Permission.Pages)).Succeeded;
    ViewData["Title"] = Model.Data.Title;

    string GetTournamentDates()
    {
        if (!(definition.DateFrom.Value.HasValue && definition.DateTo.Value.HasValue))
        {
            return "'Datum von' und/oder 'Datum bis' fehlt in den Turniereinstellungen";
        }
        if (definition.DateFrom.Value.Value.Date == definition.DateTo.Value.Value.Date)
        {
            // date from/to are the same
            return definition.DateFrom.Value.Value.ToLongDateString();
        }

        // registration period
        return definition.DateFrom.Value?.ToLongDateString() + " bis " + definition.DateTo.Value?.ToLongDateString();
    }
}

@section head
{
    @WebApp.MetaTags(Model.Data)
}

@section styles
{
    <style type="text/css">
        th {
            width: 1%;
            vertical-align: top;
        }

        tr {
            height: 2rem
        }
    </style>
}
<header @(hasImage ? "class=has-image" : "") @(hasImage ? $"style=background-image:url({Url.Content(WebApp.Media.ResizeImage(Model.Data.TournamentDefinition.TopImage, 1000, 400))})" : string.Empty)>
    <div class="dimmer"></div>
    <div class="@(hasImage ? "container" : "") text-center">
        @if (!string.IsNullOrWhiteSpace(Model.Data.TournamentDefinition.Name.Value))
        {
            <div class="row justify-content-center">
                <div class="col-lg-8 lead">
                    <h1>@Model.Data.TournamentDefinition.Name</h1>
                    <h3 class="@(hasImage ? "text-white" : "")">Ausschreibung</h3>
                </div>
            </div>
        }
    </div>
</header>
<div class="mx-3 pt-2">
    <div class="mb-4">
        <partial name="_RegistrationSuccessPartial" />
        <table id="tournament-description" class="table table-responsive table-striped table-bordered rounded shadow">
            <tbody>
            <tr>
                <th>
                    Datum:
                </th>
                <td>
                    <b>@GetTournamentDates()</b>
                </td>
            </tr>
            <tr>
                <th>
                    Uhrzeit:
                </th>
                <td>
                    @Html.Raw(definition.TimeFromTo.Value)
                </td>
            </tr>
            <tr>
                <th>
                    Besetzung:
                </th>
                <td>
                    @Html.Raw(definition.TeamComposition.Value)
                </td>
            </tr>
            <tr>
                <th>
                    Anz. Teams:
                </th>
                <td>
                    @Html.Raw(definition.NumberOfTeams.Value)
                </td>
            </tr>
            <tr>
                <th>
                    Startgeld:
                </th>
                <td>
                    @Html.Raw(definition.EntryFee.Value)
                </td>
            </tr>
            <tr>
                <th>
                    Adresse:
                </th>
                <td>
                    @Html.Raw(definition.Address.Value)
                </td>
            </tr>
            <tr>
                <th>
                    Infos:
                </th>
                <td>
                    @Html.Raw(definition.Infos.Value)
                </td>
            </tr>
            <tr>
                <th>
                    <div class="pe-3">Anmeldefrist:</div>
                </th>
                <td>
                    @if (definition.IsOver(DateTime.Now))
                    {
                        <text>Ist abgelaufen</text>
                    }
                    else if (definition.IsRegistrationPeriodSet())
                    {
                        <div>@Html.Raw(definition.RegistrationStart.Value?.ToShortDateString()) <text> bis </text> @Html.Raw(definition.RegistrationDeadline.Value?.ToShortDateString())</div>
                        if (definition.IsRegistrationAllowed(DateTime.Now))
                        {
                            <div class="my-2"><a asp-page="/TournamentRegistration" asp-route-dateticks="@definition.DateFrom.Value!.Value.Date.Ticks" class="btn btn-lg btn-primary">Jetzt anmelden</a></div>
                        }
                    }
                </td>
            </tr>
            </tbody>
        </table>
    </div>

    <div class="pb-3">
        <h3 class="text-primary">@(isTournamentOver ? "Teilnehmer" : "Angemeldete Teams") 
            @if (isAuthenticated && Model.AllRegistrations.Any())
            {
                <a href="@(Model.Data.Permalink + "?download")" class="btn btn-outline-danger ms-3"><i class="fas fa-download d-inline-block"></i> Excel-Datei herunterladen</a>
            }
        </h3>

        @if (Model.AllRegistrations.Any(tr => !tr.IsStandByRegistration && !tr.RegCanceledOn.HasValue))
        {
            <div class="mb-2 text-secondary">
                <h4>@(isTournamentOver ? "Teilnehmer" : "Anmeldungen"), sortiert nach Teamname</h4>
                Teamname, ggf. Verein, Kontaktperson
            </div>
            <ol>
                @foreach (var item in Model.AllRegistrations.Where(tr => !tr.IsStandByRegistration && !tr.RegCanceledOn.HasValue).OrderBy(tr => tr.TeamName))
                {
                <li title="angemeldet am @(item.RegisteredOn?.ToString("dd.MM.yyyy"))" class="my-1">
                    <strong>@item.GetTeamNameWithClub()</strong> von @item.GetCompleteName()
                    @{
                        if (isAuthenticated)
                        {
                            <a asp-page="/TournamentRegistration" asp-route-dateticks="@definition.DateFrom.Value!.Value.Date.Ticks" asp-route-registrationid="@item.RegistrationId"><i class="fas fa-edit d-inline-block ms-3"></i></a>
                        }
                    }
                </li>
                }
            </ol>
        }
        else
        {
            <div>Es liegen keine @(isTournamentOver ? "Teilnehmer" : "Anmeldungen") für das Turnier vor.</div>
        }

        @if (Model.AllRegistrations.Any(tr => tr.IsStandByRegistration && !tr.RegCanceledOn.HasValue))
        {
            <div class="mb-2 text-secondary">
                <h4>Mögliche &quot;Nachrücker&quot;</h4>
                (Anmeldung, nachdem die max. Anzahl an Anmeldungen erreicht war)
            </div>
            <ol>
                @foreach (var item in Model.AllRegistrations.Where(tr => tr.IsStandByRegistration && !tr.RegCanceledOn.HasValue))
                {
                    <li title="angemeldet am @(item.RegisteredOn?.ToString("dd.MM.yyyy"))" class="mb-1"><strong>@item.GetTeamNameWithClub()</strong> von @item.GetCompleteName()
                        @{
                            if (isAuthenticated)
                            {
                                <a asp-page="/TournamentRegistration" asp-route-dateticks="@definition.DateFrom.Value!.Value.Date.Ticks" asp-route-registrationid="@item.RegistrationId"><i class="fas fa-edit d-inline-block ms-3"></i></a>
                            }
                        }
                    </li>
                }
            </ol>
        }

        @if (Model.AllRegistrations.Any(tr => tr.RegCanceledOn.HasValue))
        {
            <div class="mb-2 text-secondary"><h4>Mannschaften, die ihre Anmeldung zurückgezogen haben</h4></div>
            <ol>
                @foreach (var item in Model.AllRegistrations.Where(tr => tr.RegCanceledOn.HasValue))
                {
                    <li title="angemeldet am @(item.RegisteredOn?.ToString("dd.MM.yyyy")), zurückgezogen am @(item.RegCanceledOn?.ToString("dd.MM.yyyy"))" class="mb-1"><strong>@item.GetTeamNameWithClub()</strong> von @item.GetCompleteName()
                        @{
                            if (isAuthenticated)
                            {
                                <a asp-page="/TournamentRegistration" asp-route-dateticks="@definition.DateFrom.Value!.Value.Date.Ticks" asp-route-registrationid="@item.RegistrationId"><i class="fas fa-edit d-inline-block ml-3"></i></a>
                            }
                        }
                    </li>
                }
            </ol>
        }
    </div>
</div>